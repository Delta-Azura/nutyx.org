   <h1>Scenario D</h1>
    <a name='11'></a>
    <h2>Introduction</h2>
     <p>You do not want to compile everything; you are satisfied with binaries available.</p>
     <p>Your new packages use dependencies from existing binaries.</p>
     <p>This scenario is probably the longest to implement, but once everything is in place, personal packages can be added very quickly.</p>
    <a name='12'></a>
    <h2>The /etc/cards.conf file</h2>
     <p>A folder containing my personal packages is added. Neither this nor the collection folders should be updated by the <b>cards sync</b> command, so we do not specify a URL (updating libraries that you have built packages against could break those packages).</p>
     <p>Only the <b>base</b> collection must remain active, this allows the <b>rsync</b> command to be downloaded and installed if not already installed.</p>
     <p>The architecture of the machine is checked; we are 64_bit.</p>
     <p>The folder containing the build logs is defined</p>
     <p>I do not need to specify the locales, they will always installed.</p>
     <p>Directory folders define the basic system, in case a return to a base is required</p>
     <p>The typical contents of your <b>/etc/cards.conf</b> file for the <b>Scenario D</b>:</p>
     <pre class="output">dir /srv/www/nutyx/x86_64/personnal
dir /srv/www/nutyx/x86_64/gui
dir /srv/www/nutyx/x86_64/cli
dir /srv/www/nutyx/x86_64/base
dir /var/lib/pkg/depot/base|http://downloads.nutyx.org
dir /var/lib/pkg/depot/base-extra|http://downloads.nutyx.org
logdir /var/log/pkgbuild
base /srv/www/saravane/x86_64/base
base /srv/www/saravane/x86_64/base-extra
base /srv/www/saravane/tokeep</pre>
    <a name='13'></a>
    <h2>Installing development tools</h2>
     <p>For this scenario, we will synchronize all binaries available on the NuTyX mirror and will stick to these versions.</p>
     <p>Let's start by installing all the development tools: C compiler, C and C++ library, etc</p>
     <pre class="command_user"><kbd>get cards.devel</kbd></pre>
     <p>Lines pointing to the URL of the NuTyX mirror can now be removed, so that <b>cards sync</b> is deactivated.</p>
     <p>The new <b>/etc/cards.conf</b> file:</p>
     <pre class="output">dir /srv/www/nutyx/x86_64/personnal
dir /srv/www/nutyx/x86_64/stable/gui
dir /srv/www/nutyx/x86_64/stable/cli
dir /srv/www/nutyx/x86_64/stable/base
logdir /var/log/pkgbuild
base /srv/www/saravane/x86_64/stable/base
base /srv/www/saravane/tokeep</pre>
    <a name='14'></a>
    <h2>Synchronising binaries with rsync</h2>
     <p>This is to fetch packages available as binaries from the <b>base,cli and gui</b> collections. It can last from several minutes to several hours depending on your connection.</p>
     <p>Fortunately, this operation only takes so much time the first time you do it. <img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" /> <img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" /> <img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" />.</p>
     <p>Your next update using rsync will be a lot faster, as only necessary files will be updated according to your system.</p>
     <p>Note the destination folder, I decided to move the binaries to the root of the http server <img src="../graphics/smiley-tongue-out.gif" alt="Tongue out" title="Tongue out" />.</p>
     <p>Your next step is to create the following folders</p>
     <pre class="command_user"><kbd>sudo mkdir -p /srv/www/nutyx/x86_64/stable/{personal,tokeep}</kbd></pre>
     <p>We can now synchronize all the binaries:</p>
     <pre class="command_user"><kbd>for i in base cli gui; do sudo rsync -avz --delete-after rsync://downloads.nutyx.org/nutyx/x86_64/stable/$i/ \
/srv/www/nutyx/x86_64/stable/$i/;done</kbd></pre>
     <p>Go and make a nice big cup of hot medium roasted Java or two, order your favorite Chinese/pizza take-away, or a tasty burger with some french fries, or whatever suits your palate. Or read a Linux Journal.. <img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" />. This will take quite some time...</p>
    <a name='15'></a>
    <h2>The /etc/pkgmk.conf file</h2>
     <p>For this scenario, it is essential to check all the variables necessary for the proper functioning of the <b>pkgmk</b> and <b>cards</b> commands.</p>
     <p>My processor is a dual core and I run 64-bit NuTyX.</p>
     <p>My source files are stored in a common folder; I do not want them to be deleted.</p>
     <p>So as not to overpopulate my disk or lose work when running the command: <b>rsync --delete-after rsync: //downloads.nutyx.org/nutyx/saravane/x86_64/ /srv/www/saravane/x86_64/</b> I prefer to use a temporary working folder:</p>
     <pre class="output">PKGMK_SOURCE_DIR="/srv/www/sources"
PKGMK_KEEP_SOURCES="yes"
PKGMK_WORK_DIR="/tmp/work"</pre>
     <p>In this scenario, I want to install my dependencies without compiling them locally. I need the <b>.PKGREPO</b> file to be generated in the ports folder. I want to use the <b>cards install</b> or <b>get</b> command to be able to reinstall my  available binaries. The <b>pkgmk</b> must generate the <b>.PKGREPO</b> file of my personal collection.</p>
     <pre class="output">PKGMK_IGNORE_REPO="no"
PKGMK_IGNORE_COLLECTION="no"</pre>
     <p>Due to existing binary dependencies and the fact that these binary packages are split into parts, it is best to do the same for your personal packages. The locales produced will number 11 in total, including the local default:</p>
     <pre class="output">PKGMK_GROUPS=(devel man doc service)
PKGMK_LOCALES=(fr de it es nl pt da nn sv fi)</pre>
     <p>We want all binary packages to have the same compression format as the official binaries; this is not obligatory but we want to maintain uniformity between all compressed binaries. I do not want to remove my created binaries after installation.</p>
     <pre class="output">PKGMK_COMPRESSION_PACKAGE="yes"
PKGMK_COMPRESSION_MODE="xz"
PKGMK_CLEAN="no"</pre>
     <p>Here's what your <b>/etc/pkgmk.conf</b> file may look like for <b>Scenario D</b>:</p>
     <pre class="output">export CFLAGS="-O2 -pipe"
export CXXFLAGS="${CFLAGS}"
case ${PKGMK_ARCH} in
    "x86_64"|"")
       export MAKEFLAGS="-j2"
       ;;
    "i686")
       export CFLAGS="${CFLAGS} -m32"
       export CXXFLAGS="${CXXFLAGS} -m32"
       export LDFLAGS="${LDFLAGS} -m32"
       ;;
    *)
       echo "Unknown architecture selected! Exiting."
       exit 1
       ;;
esac
PKGMK_SOURCE_DIR="/srv/www/sources"
PKGMK_KEEP_SOURCES="yes"
PKGMK_WORK_DIR="/tmp/work"
PKGMK_IGNORE_REPO="no"
PKGMK_IGNORE_COLLECTION="no"
PKGMK_GROUPS=(devel man doc service)
PKGMK_LOCALES=(fr de it es nl pt da nn sv fi)
PKGMK_COMPRESSION_PACKAGE="yes"
PKGMK_COMPRESSION_MODE="xz"
PKGMK_CLEAN="no"</pre>


    <a name='3'></a>
    <h2>Conclusion</h2>
     <p>For this scenario, the commands to remember are:</p>
     <pre class="command"><kbd>cards level
cards base -r
cards create
for i in base cli gui; do rsync -avz --delete-after rsync://downloads.nutyx.org/nutyx/x86_64/stable/$i/ \
/srv/www/nutyx/x86_64/stable/$i/;done</kbd></pre>
