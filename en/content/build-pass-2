   <h1>Construction of the NuTyX (pass 2)</h1>
    <p>
     It's time to build your NuTyX.
     One single condition: Have been able to finish with success the construction of the CHROOT (pass 1).
    <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
     The author is not responsable for the lost of your datas or others dammage which could occur during a wrong manipulation.
     This article is target for aware Linux peoples.
    </div>
    <p>
     All the operations will be done in the root account.
     It's then ABSOLUTLY necessary to be very carefull otherwise you could broker your actual distribution.
    <p>
     The LFS variable in our exemple is pointing to /mnt/lfs. Up to you to adjust to your need if necessary.
    <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
     Please note that the pass2 can be much more an "aventure" as it can always have problems when compiling a package the first time.
     Up to you to give us a feedback with all the details of the error.
     You can use <a href="http://forums.nutyx.org/index.php?board=8.0" title="Lire dans une autre fenÃªtre" class="external" onclick="window.open(this.href); return false;">the forums</a> or the irc channel for that.
    </div>
    <p>
     To avoid any confusion and avoid dispersion in the actions to take, the article is split in two parts.
     The first shows every step to do and the second gives an explaignation about each step. 
    <p>
     They are 22 actions. SO again:
    <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
     All the manipulations should be done in the root account.
    </div>
    <h2>The actions</h2>
    <ol>
      <li>
       We go out of the 'lfs' account
<pre class="command_user"><kbd>exit</kbd></pre>
      <li>
       We check the LFS variable
<pre class="command"><kbd>echo $LFS</kbd></pre>MUST return <pre class="output">/mnt/lfs</pre> or the value define in the begining of pass 1
<div class="important"><img alt="[Important]" src="../graphics/caution.gif" /><img alt="[Important]" src="../graphics/caution.gif" /><img alt="[Important]" src="../graphics/caution.gif" />BEFORE YOU GO FURTER MAKE SHURE THE LFS VARIABLE IS PROPERLY SET OTHERWISE YOU WILL BREAK YOUR DISTRIBUTION</div>
	If the result is correct:
<pre class="command"><kbd>chown -R root:root $LFS</kbd></pre>
      <li>
       We create folders and links to put the recepts in place.
<pre class="command"><kbd>install -dv -m0750  $LFS/root
ln -sv development/scripts $LFS/root/bin</kbd></pre>
      <li>
       We move the receipts to the right folder and go in this folder.
<pre class="command"><kbd>mv /home/lfs/development $LFS/root/
cd $LFS/root/development/base/nutyx</kbd></pre>
      <li>
       We compile the first package of NuTyX.
<pre class="command"><kbd>/tools/bin/pkgmk -cf ../../../bin/pkgmk.conf.passes</kbd></pre>
      <li>
       We install the <b>nutyx</b> package in the NuTyX.
<pre class="command"><kbd>/tools/bin/pkgadd -r $LFS nutyx1*
/tools/bin/pkgadd -r $LFS nutyx.man1*</kbd></pre>
      <li>
       We check if it's present.
<pre class="command"><kbd>/tools/bin/pkginfo -r $LFS -i</kbd></pre>
should return
<pre class="output">(base) nutyx 8.2...
(base) nutyx.man 8.2...</pre>
      <li>
       We install all the configuration files in our new NuTyX.
        <pre class="command"><kbd>VERSION="development" install-nutyx -ic</kbd></pre>
      <li>
       We mount all different folders.
<pre class="command"><kbd>mount -v -B /dev $LFS/dev
mount -vt devpts devpts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
if [ -h /dev/shm ]; then rm -f $LFS/dev/shm;mkdir $LFS/dev/shm;fi
mount -vt tmpfs shm $LFS/dev/shm
chmod 1777 /dev/shm</kbd></pre>
      <li>
       We copy resolv.conf from the host distribution.
<pre class="command"><kbd>cp -v /etc/resolv.conf $LFS/etc</kbd></pre>
      <li>
       We check that all the folders are correctly mounted via the command:
<pre class="command"><kbd>mount|grep $LFS</kbd></pre>
	it should return something like:
<pre class="output">/dev/sda2 on /mnt/lfs type ext4 (rw)
/devtmpfs on /mnt/lfs/dev type devtmpfs (rw,nosuid,relatime,size=16300988k,nr_inodes=4075247,mode=755)
devpts on /mnt/lfs/dev/pts type devpts (rw,relatime,gid=5,mode=620,ptmxmode=000)
proc on /mnt/lfs/proc type proc (rw,relatime)
sysfs on /mnt/lfs/sys type sysfs (rw,relatime)
tmpfs on /mnt/lfs/run type tmpfs (rw,relatime)</pre>
      <li>
       We enter now in the NuTyX.
<pre class="command"><kbd>chroot "$LFS" /usr/bin/env -i HOME=/root TERM="$TERM" PS1='\u:\w\$ ' \
/bin/bash --login +h</kbd></pre>
        The result will be a bit uggly but we can ignored it:
<pre class="output">bash: id: command not found
bash: id: command not found
bash: date: command not found
bash: uname: command not found
bash: uname: command not found
bash: whoami: command not found
bash: uname: command not found
bash: tput: command not found
...</pre>
     <li>
      We redefine the PATH variable.
<pre class="command"><kbd>export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin:/root/bin</kbd></pre>
     <li>
      We launch the compilation of the packages.
<pre class="command"><kbd>cd /root/development/base
pass</kbd></pre>
	return
<pre class="output">tar -p -o -C /tmp/work/src -xf /sources/linux-3.19.3.tar.xz
...</pre>
    <li>
     Wait for the following message to appear.
    <pre class="output">need to install bash manually</pre>
    <li>
     As it's says, the <b>bash</b> packages needs to be installed manually.
     So let's do it from outside the NuTyX. We got out first:
    <pre class="command"><kbd>exit</kbd></pre>
    <li>
     Now we go to the right place and install the <b>bash</b> packages:
    <pre class="command"><kbd>cd $LFS/root/development/base/bash
for PACK in *.xz; do /tools/bin/pkgadd -r $LFS $PACK;done</kbd></pre>
    <li>
     We check if it has been added:
     <pre class="command"><kbd>/tools/bin/pkginfo -r $LFS -i|grep bash</kbd></pre>
return
        <pre class="output">(base) bash 4.4-1
(base) bash.da 4.4-1
(base) bash.de 4.4-1
(base) bash.devel 4.4-1
(base) bash.doc 4.4-1
...</pre>
    <li>
     We enter again into NuTyX and we finish the job:
    <pre class="command"><kbd>chroot "$LFS" /usr/bin/env -i HOME=/root TERM="$TERM" PS1='\u:\w\$ ' \
/bin/bash --login +h</kbd></pre>
      Few errors stills show up:
<pre class="output">bash: id: command not found
bash: id: command not found
bash: date: command not found
bash: uname: command not found
bash: uname: command not found
bash: whoami: command not found
bash: uname: command not found
bash: wc: command not found
/</pre>
    <li>
     We redefine AGAIN the PATH variable:
<pre class="command"><kbd>export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin:/root/bin</kbd></pre>
    <li>
     We launch AGAIN the compilation of the packages:
<pre class="command"><kbd>cd /root/development/base
pass</kbd></pre>
<pre class="output">tar -p -o -C /tmp/work/src -xf /sources/bc-1.06.95.tar.bz2
....</pre>
    <li>
     The compilation ends with <b>ca-certificates</b> package:
    <pre class="output">ADD: ca-certificates-20150725, 1282 files: 100%
=======&gt; Installing 'ca-certificates1418739487x86_64.cards.tar' succeeded.
=======&gt; compress ca-certificates1418739487x86_64.cards.tar</pre>
 
    </ol>
    <h2>Explanation to each step</h2>
    <ol>
      <li>
       <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
        Its very important that everything is done via the root account.
       </div>
      <li>
       The LFS variable is used all along the article, its important that it's correctly set and that it point always to the same folder.
       One way to solve this problem is to define ones for all in the .bash_profile file and to source it:
<pre class="command"><kbd>echo "export LFS=/mnt/lfs" &gt;&gt; /root/.bash_profile
source  ~/.bash_profile</kbd></pre>
      <li>
       Checking the LFS variable.
       If OK we change the owner and group of the contents of $LFS.
      <li>
       We create the folder to put the receiptes in place and the log folder as well.
       We create also a link so that the script <b>pass</b> is found.
      <li>
       We will now compile the first package which is <b>nutyx</b>.
       For this we go in the folder of the recept.
      <li>
       This package doent contains any code so it's just create all the folders for the NuTyX.
      <li>
       We install the first package <b>nutyx</b> into the NuTyX and...
      <li>
       We check if it's corretly installed.
      <li>
       We add all the defaults configuration files, those are included in the instal-nutyx script.
      <li>
       It's time to mount all the necessary folders to be able to enter and to compile without problems the rest of the NuTyX.
      <li>
       In case of a package need to download something (for exemple the kernel) we copy the resolv.conf file from the host to be able to resolve the adress.
      <li>
       One last check before we enter the CHROOT.
      <li>
       We can now enter the CHROOT means the future NuTyX.
       As it has still no programms at the right place, we get all kind of uggly messages.
       The PATH must be define again so that all the binaries are found in the right order.
      <li>
       The PATH variable is not set properly, so we need to redefine it.
      <li>
       We go in the right folder. We launch the compilation of the packages in the right order.
      <li>
       The bash interpreter must be installed outside the chroot, so we wait until the message comes.
      <li>
       We go out of the chroot.
      <li>
       We go in the right folder and start a loop to install all the <b>bash</b> packages.
      <li>
       Again we check if it's corretly installed by.
      <li>
       We can now return into the CHROOT means the future NuTyX. This time, they should be NO weard messages printout.
      <li>
       The PATH variable is redefine</li>
      <li>
       We go in  the right folder and relaunch the compilation of the remains packages in the right order.
      <li>
       One the <b>ca-certificates</b> package is compiled and installed, the construction of your base NuTyX is done.
    </ol>
    <h2>You need to know:</h2>
    <ol>
      <li>
       <div class="note"><img alt="[Note]" src="../graphics/note.gif" />
        If you have an error when compiling a package, it's not a big deal, when you restart the command <b>pass</b> the script will restart where it's stops.
        Up to you to inform us what kind of error it is.
        You can use <a class="url" href="http://webchat.freenode.net/?channels=nutyx">the irc channel</a>
        or <a class="url" href="http://forums.nutyx.org">the forum</a>.
       </div>
      <li>
       <div class="note"><img alt="[Note]" src="../graphics/note.gif" />
        You can build the pass 2 in serverall times.
        If you went out of the chroot, you MUST make shure to type the <u>12 et 13 commands</u> again.
        If you did stop the PC, make shure to type <u>the command 9</u> plus commands 12 and 13.
       </div>
    </ol>
<p>
  <div class="pied_page">
   <a class="url" href="build-post">One pass 2 is done, you can start the post-construction and generation of the iso</a>
  </div>
