<h1>The install-nutyx script</h1>
 <h2>Introduction</h2>
  <p>
   The script can be started from an already installed NuTyX, a 'LIVE' ISO or from another distribution.
  <p>
   Make sure you are using Bash interpreter otherwise the script will fail.
  <p>
   If you use another distribution, make sure your distribution is running a compatible glibc version
   otherwise the script will fail.
  <p>
   It must be executed from the root account.
  <p>
   This script allows the installation of a base NuTyX in a folder.
  <p>
   It's signature can be verified by downloading the <a class="url" href="http://download.nutyx.org/install-nutyx.md5sum">http://download.nutyx.org/install-nutyx.md5sum</a> file.

  <div class="important">
    <img alt="[Important]" src="../graphics/caution.gif" />
    This script does not allow you to overwrite another distribution or a NuTyX already installed in the target folder (/mnt/hd by default).
    And so if you have to restart the script it is important to delete the contents of the target folder first.  </div>
 <h2>Let's start with a simple example</h2>
  <p>
   The traditionnal example to show how simple it is.
  <p>
   The script can install a Base NuTyX in the <b>/mnt/hd</b> by default. The command is as simple as:
   <pre class="command"><kbd>bash install-nutyx</kbd></pre>
  <p>
   The installation will start immediatly.

 <h2>Configuration variables</h2>
       <table width="100%" cellspacing="0">
        <caption><EM>The use of variables allows the adaptation of the script to different scenarios: :</EM></caption>
       <tr class="sidebar">
        <th>
        Variable name
        <th>
        Explaination
        <th>
        Comments
       <tr class="even">
        <td>
         LFS
        <td>
         The installation path.
        <td>
         Ok in most cases.
       <tr class="odd">
        <td>
         CHROOT
        <td>
         The list of packages to install prior the chroot of install-nutyx itself.
        <td>
         Need to be used when trying from another distribution.
       <tr class="even">
        <td>
         URL
        <td>
         The url adress of the mirror where are the binaries located (remote or local).
        <td>
         We can use our own server.
       <tr class="odd">
        <td>
         VERSION
        <td>
         The version to be installed (testing or rolling).
        <td>
         The version is not checked by the script.
         <p>
         We can then install any version as long it exist on the server.
       <tr class="even">
        <td>
         KERNEL
        <td>
         As per default they are no kernel installed, up to you to choose one.
        <td>
         Available kernel names:
        <p>
         kernel-49, kernel-414, kernel-419, kernel-54, kernel-510, kernel or linux-mainline.
       <tr class="odd">
        <td>
         DEPOT
        <td>
         The <b>local</b> path of the downloaded binaries.
        <td>
         This variable can be used in case you want to mount the depot directory (see the MOUNT variable).
       <tr class="even">
        <td>
         MOUNT
        <td>
         The <b>local</b> path of the packages depot to used for installation 
        <td>
         Allows us to install an NuTyX without the need of a network connection.
       <tr class="odd">
        <td>
         ISO
        <td>
         If we want to generate an ISO from this installation,
         we can specify the name of the ISO to generate via this variable.
        <td>
         See below.
    </table>
   <p>
   The script will analyse the <b>/etc/install-nutyx.conf</b> file if it exist and used defined variables in it.
   Here is a summary example of the <b>/etc/install-nutyx.conf</b> file:</p>
     <pre class="output">URL="http://localhost"
DEPOT="/DEPOT"
LFS="/mnt/lfs"
VERSION="rolling"</pre>

 <h2>Typical example of the script: Install a NuTyX from the 'LIVE' iso</h2>  
       <ul>
        <li>
         Open a terminal and switch to the root account if not yet set:
         <pre class="command_user"><kbd>sudo bash</pre>
        <li>
         Make sure the network is working.
         <pre class="command"><kbd>ping nutyx.org</pre>
        <li>
         Create the needed partitions for NuTyX:
         <pre class="command"><kbd>cfdisk /dev/sda</kbd></pre>
        <li>
         <ul>
          <li>
           For an 'UEFI' machine:
           Choose a 'GPT' partition table.
           Define the first partition as 'EFI System'.
           The size of the partition needs to be 50 Mbytes minimum.
           The partition needs to be foramt in vfat.
          <li>
           For a 'BIOS' machine:
           Choose a 'GPT' or 'msdos' partition table.
           No other restriction.
         </ul>
        <li>
         Reserve a 4 Gbytes if you have 2 Gbyte or more of RAM.
         Otherwise double the size of your RAM.
        <li>
         Format all the partitions, in our example, we have 3 or 3 partitions depending of the machine (UEFI or BIOS):
         <ul>
          <li>
           For the 'UEFI' machine:
           <pre class="command"><kbd>mkfs.vfat /dev/sda1</kbd></pre>
           <pre class="command"><kbd>mkswap /dev/sda2</kbd></pre>
           <pre class="command"><kbd>mkfs.ext4 /dev/sda3</kbd></pre>
          <li>
           For the 'BIOS' machine:
           <pre class="command"><kbd>mkswap /dev/sda1</kbd></pre>
           <pre class="command"><kbd>mkfs.ext4 /dev/sda2</kbd></pre>
         </ul>
        <li>
         Mount the destination partitions
         <ul>
          <li>
           For the 'UEFI' machine:
           <pre class="command"><kbd>mount /dev/sda3 /mnt/hdmkdir -p /mnt/hd/boot/efi
mount /dev/sda1 /mnt/hd/boot/efi</kbd></pre>
          <li>
           For the 'BIOS' machine:
           <pre class="command"><kbd>mount /dev/sda2 /mnt/hd</kbd></pre>
          </ul>
        <li>
         Activate the swap partition
         <ul>
          <li>
           For the 'UEFI' machine:
           <pre class="command"><kbd>swapon /dev/sda2</kbd></pre>
          <li>
           For the 'BIOS' machine:
           <pre class="command"><kbd>swapon /dev/sda1</kbd></pre>
         </ul>
        <li> 
         Install the base NuTyX with the last kernel:
         <p>
          If you use a NuTyX ISO:
          <pre class="command"><kbd>KERNEL=kernel install-nutyx</kbd></pre>
         <p>
          If you use another distribution:
          <pre class="command"><kbd>CHROOT="coreutils" SHELL=/bin/bash KERNEL=kernel install-nutyx</kbd></pre>
        <li>
         Once the installation is done, enter into the freshly installed NuTyX via the command:
         <pre class="command"><kbd>install-nutyx -ec</kbd></pre>
        <li>
         For the 'UEFI' machine, install the 'efibootmgr' package:
         <pre class="command">cards install efibootmgr<kbd></pre>
        <li>
         Make the NuTyX bootable
         <ul>
          <li>
           For the 'UEFI' machine:
           <pre class="command">grub-install --target=x86_64-efi /dev/sda<kbd></pre>
          <li>
           For the 'BIOS' machine:
           <pre class="command">grub-install --target=i386-pc /dev/sda<kbd></pre>
         </ul>  
        <li>
         Create the /boot/grub/grub.cfg file:
         <pre class="command">grub-mkconfig -o /boot/grub/grub.cfg<kbd></pre>
        <li>
         Exit and umount partitions
         <pre class="command">exit
umount -Rv /mnt/hd
<kbd></pre>
        <li>
         Remove the bootable media and restart the machine.
       </ul>
       <p>
        By default, it will be the rolling branch of the NuTyX installed; it's possible to specify another branch.
        Specify the name of the branch via the <i><b>VERSION</b></i> variable.
        It should exist on the depot server.
        <pre class="command"><kbd>VERSION="testing" bash install-nutyx</kbd></pre>
       <p>
        The default URL will be used for downloading and configuration of NuTyX.
        To instead specify another URL, use the  <i><b>URL</b></i> variable.
        <pre class="command"><kbd>URL="http://192.168.0.254" bash install-nutyx</kbd></pre>
       <p>
        By default, it will be the <i>/mnt/hd</i>  folder used for the installation, the <i><b>LFS</b></i> variable can be set to specify a new destination folder:
        <pre class="command"><kbd>LFS="/My-NuTyX" bash install-nutyx</kbd></pre>
        The folder will be automatically created if it does not already exist.
       <p>
        You can combine several variables:
        <pre class="command"><kbd>LFS="/MINI-ISO" \
VERSION="rolling" \
URL="http://192.168.0.254" \
CHROOT="acl attr expat" \
bash install-nutyx</kbd></pre>

  <p>
   If you want to have your own configuration,
   it's possible to place your configuration files in the <b>/etc/install-nutyx.conf.d/</b> folder.

   When you run the script, if files are found there, they will be used instead of the default ones.
  <p>
       <table width="100%" cellspacing="0">
        <caption><EM>Recognised configuration files list:</EM></caption>
       <tr class="sidebar">
        <th>
        File name
        <th>
       File final path destionation
       <tr>
        <td>
         cards.conf
        </td>
        <td>
         /etc/cards.conf
        </td>
       <tr>
        <td>
         pkgmk.conf
        </td>
        <td>
         /etc/pkgmk.conf
        </td>
       <tr>
        <td>
         fstab
        </td>
        <td>
         /etc/fstab
        </td>
       <tr>
        <td>
         .bashrc
        </td>
        <td>
         /root/.bashrc and /home/&lt;username&gt;/.bashrc
        </td>
       <tr>
        <td>
         bashrc
        </td>
        <td>
         /etc/bashrc
        </td>
       <tr>
        <td>
         profile
        </td>
        <td>
         /etc/profile
        </td>
       <tr>
        <td>
         hosts
        </td>
        <td>
         /etc/hosts
        </td>
      <tr>
        <td>
         inputrc
        </td>
        <td>
         /etc/inputrc
        </td>
      <tr>
        <td>
         rc_site
        </td>
        <td>
         /etc/sysconfig/rc_site
        </td>
      <tr>
        <td>
         .bash_profile
        </td>
        <td>
         /root/.bash_profile and /home/&lt;username&gt;/.bash_profile
        </td>
      <tr>
       <td>
        .dmrc
       </td>
       <td>
        /etc/skel/.dmrc
       </td>
      <tr>
       <td>
        shells
       </td>
       <td>
        /etc/shells
       </td>
      <tr>
       <td>
        dircolors.sh
       </td>
       <td>
        /etc/profile.d/dircolors.sh
       </td>
      <tr>
       <td>
        extrapaths.sh
       </td>
       <td>
        /etc/profile.d/extrapaths.sh
       </td>
      <tr>
       <td>
        readline.sh
       </td>
       <td>
        /etc/profile.d/readline.sh
       </td>
      <tr>
       <td>
        umask.sh
       </td>
       <td>
        /etc/profile.d/umask.sh
       </td>
      <tr>
       <td>
        modules
       </td>
       <td>
        /etc/sysconfig/modules
       </td>
      <tr>
       <td>
        createfiles
       </td>
       <td>
        /etc/sysconfig/createfiles
       </td>
      <tr>
       <td>
        mouse
       </td>
       <td>
        /etc/sysconfig/mouse
       </td>
     </table>
  <p>
   As a conclusion:
  <div class="important">
        <img alt="[Important]" src="../graphics/caution.gif" />
        Don't forget to remove/check the <i>/etc/install-nutyx.conf</i> file and
        the contents of the <i>/etc/install-nutyx.d/</i> directory if necessary.
        Found files will be read and used by the script and allow a more powerful configuration. 
  </div>
 <h2> Produce a customised ISO</h2>
    <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
    Producing an ISO is only possible on NuTyX.
    Means, it's not possible to use another distribution for building an ISO.
    </div>
  <p>
    As specified above, the <b><i>ISO</i></b> variable allows you to specify the name of the ISO to generate.
  <p>
   For example, the command below:
    <pre class="command_user"><kbd>sudo ISO=gnome bash install-nutyx</kbd></pre>
    will install and produce a gnome NuTyX in the <b><i>/mnt/hd</i></b> folder.
   <p>
    Possible ISO names are:
      <p>
    <i>strict, mini, base, cli, gui, xorg, gui_extra, openbox, jwm, lxde, xfce4, mate, gnome and kde5</i>
   <p>
    It is possible to test the command and thus view all the commands that are affected.
       <pre class="command_user"><kbd>ISO=gnome bash install-nutyx -t</kbd></pre>
   <pre class="output">
List of variables: 

LFS        : /mnt/hd
URL        : http://downloads.nutyx.org
VERSION    : rolling
KERNEL     : 
DEPOT      : /var/lib/pkg/depot
MOUNT      : 
SHELL      : /bin/bash
DEPOT_BASE : http://downloads.nutyx.org/x86_64/rolling/base
CHROOT     : nutyx busybox curl gcc bzip2 glibc zlib lz4 xz zstd \
libarchive openssl cards
CORE       : acl attr bash coreutils readline expat ncurses lzo gmp \
flex file gzip mpc mpfr grep sed findutils binutils inetutils diffutils \
shadow bc less libcap util-linux kmod kbd pam gdbm e2fsprogs libpipeline \
gettext procps-ng psmisc sudo tzdata iproute2 iana-etc groff man-db \
cards.man nutyx.man dialog cpio squashfs lsb-release grub eudev sysklogd \
sysvinit kernel efibootmgr linux-firmware systemd runyx wireless-tools \
wpa-supplicant gpm gpm.service dosfstools make-ca xdg-user-dirs \
sound-theme-freedesktop ntp ntp.service flcards gvfs network-manager-applet \
xorg-xinit xorg-xf86-input-synaptics xorg-xf86-input-wacom \
xorg-xf86-video-ati xorg-xf86-video-fbdev xorg-xf86-video-intel \
xorg-xf86-video-nouveau xorg-xf86-video-vesa xorg-xrandr xorg-setxkbmap \
firefox thunderbird gparted leafpad scrot vlc telegram gnome epiphany \
seahorse-nautilus evolution simple-scan gnome-weather gnome-chess balsa
DEVEL      : 
for k in $(ls /lib/modules/)
do
  mkinitramfs $k -nf
done
sed -i "s@kernel-419@$KERNEL@g" /sbin/setup-nutyx
cards purge
for d in opt bin etc lib lib64 root run sbin usr var home
do
  rm -f /ISO/boot/$d.squashfs
  mksquashfs /$d /ISO/boot/$d.squashfs
done
exit 0
ISO        : GNOME
STRICT     : kernel
MINI       : dhcpcd
BASE       : efibootmgr linux-firmware systemd runyx wireless-tools \
wpa-supplicant
CLI        : gpm gpm.service dosfstools make-ca xdg-user-dirs \
sound-theme-freedesktop ntp ntp.service
GUI        : flcards gvfs network-manager-applet
GUI_EXTRA  : firefox thunderbird gparted leafpad scrot vlc telegram
XORG       : xorg-xinit xorg-xf86-input-synaptics xorg-xf86-input-wacom \
xorg-xf86-video-ati xorg-xf86-video-fbdev xorg-xf86-video-intel \
xorg-xf86-video-nouveau xorg-xf86-video-vesa xorg-xrandr xorg-setxkbmap
GNOME_EXTRA: epiphany seahorse-nautilus evolution simple-scan \
gnome-weather gnome-chess balsa
KDE5_EXTRA : kdenlive k3b
JWM        : lxdm jwm
LXDE       : lxdm lxde
XFCE4      : lxdm xfce4 xfce4-extra
MATE       : lightdm mate
GNOME      : gnome
KDE5       : kde5
ISO Filename /mnt/hd/NuTyX_x86_64-21.03.0-rc4-GNOME.iso</pre>
  <p>
    As we can see, new variables are now available.
   These can also be redefined at your convenience:
  <p>
   STRICT, BASE, CLI, GUI, GUI_EXTRA, XORG, GNOME, GNOME_EXTRA, KDE5, KDE5_EXTRA, OPENBOX, JWM, LXDE, XFCE4, MATE.
  <p>
   Each variable specify a set of packages to be installed.
   Each ISO name use a set of thoses variables to build up the specified ISO.
   That means, by specifying your own set of packages for some or all of those variables,
   you will generate your very own ISO.
  <p>
   The table below shows which combination of each of thoses variables are used for each ISO.
  <table>
   <caption><EM>Combinations of available variables for each ISO name:</EM></caption>
    <tr class="sidebar">
     <th>
      ISO name
     <th>
      Used variable(s)
    <tr> 
     <td>
      STRICT
     <td>
      STRICT
    <tr>
     <td>
      MINI
     <td>
      STRICT + MINI
    <tr>
     <td>
      BASE
     <td>
      STRICT + BASE
    <tr>
     <td>
      CLI
     <td>
      STRICT + BASE + CLI
    <tr>
     <td>
      GUI
     <td>
      STRICT + BASE + CLI + GUI
    <tr>
     <td>
      XORG
     <td>
      STRICT + BASE + CLI + GUI + XORG
    <tr>
     <td>
      JWM
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + JWM
    <tr>
     <td>
      OPENBOX
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + OPENBOX
    <tr>
     <td>
      LXDE
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + LXDE
    <tr>
     <td>
      XFCE4
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + XFCE4
    <tr>
     <td>
      MATE
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + MATE
    <tr>
     <td>
      GNOME
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + GNOME + GNOME_EXTRA
    <tr>
     <td>
      KDE5
     <td>
      STRICT + BASE + CLI + GUI + GUI_EXTRA + XORG + KDE5 + KDE5_EXTRA
  </table>
 <h2>A few examples</h2>
  <pre class="command_user"><kbd>sudo ISO=KDE5 install-nutyx</kbd></pre>
  <p>
   install and produce a standard kde5 ISO in the /mnt/hd directory.

  <pre class="command_user"><kbd>sudo \
ISO="lxde" \
XORG="xorg-xf86-input-synaptics" \
BASE="linux-firmware wireless-tools wpa-supplicant" \
GUI="xorg-xrandr" \
GUI_EXTRA="deadbeef geany firefox" \
DEVEL="&& setup-nutyx start && echo 'ready ?' && read a" \
CLI="dhcpcd openssh git cdrtools syslinux libisoburn dosfstools" \
LFS="/MyIso" \
DEPOT="/media/www/x86_64/rolling" \
MOUNT="/media/www/x86_64/rolling" \
install-nutyx</kbd></pre>
   <p>
    install and produce a customised lxde ISO.
    The BASE, CLI, GUI, XORG, GUI_EXTRA, DEVEL, LFS, MOUNT and DEPOT variables redefined.
