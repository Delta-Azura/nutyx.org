<h1>Scénario B</h1>

 <a name='1'></a>
 <h2>Introduction</h2>
  <p>
   Vous êtes satisfait de votre NuTyX, il y a juste un ou deux paquets qui vous manquent,
   vous décidez donc de les compiler vous-même.
  <p>
   Armez-vous de courage et de patience
   <img src="../graphics/smiley-tongue-out.gif" alt="Tongue out" title="Tongue out" /><img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" />.
   <div class="important"><img alt="[Important]" src="../graphics/caution.gif" />
     Dans ce scénario, évitez à tout prix de compiler des recettes réclamant des dépendances.
     Si tel est le cas, vous serez confronté aux nombreuses erreurs liées aux dépendances devel non installées par défaut.
     Dans un tel cas, préférez le scenario <b>C</b>.
     Vous voilà averti.
   </div>

 <a name='2'></a>
 <h2>Le fichier /etc/cards.conf</h2>
  <p>
   Un dossier contenant mes recettes personnelles est ajouté,
   ce dossier ne <u>doit jamais</u> être mis à jour par la commande <b>cards sync</b>,
   donc on ne doit pas spécifier d'adresse URL associée.
  <p>
   Les collections binaires sont activées, cela me permettra d'ajouter facilement
   les éventuelles dépendances manquantes...
  <p>
   La(les) langue(s) utilisée(s) sur la machine est(sont) ajustée(s)
  <p>
   Le dossier définissant le système de base, en cas de retour à un système de base est défini</p>
  <p>
   Le contenu typique de votre fichier <b>/etc/cards.conf</b> pour le scénario <b>B</b>:
   <pre class="output">
dir /usr/ports/personnel
dir /var/lib/pkg/depot/gui|http://downloads.nutyx.org
dir /var/lib/pkg/depot/cli|http://downloads.nutyx.org
dir /var/lib/pkg/depot/base|http://downloads.nutyx.org
locale fr
locale de
base /var/lib/pkg/depot/base</pre>

 <a name='3'></a>
 <h2>Installation des outils de développement</h2>
  <p>
   Commençons par créer le dossier <b>/usr/ports/personnel</b>.
   <pre class="command_user"><kbd>sudo mkdir -p /usr/ports/personnel</kbd></pre>
  <p>
   On peut maintenant installer les paquets de développement, cad un compilateur, les librairies C et C++ les outils autoconf, automake, etc etc..
   <pre class="command_user"><kbd>sudo cards sync</kbd></pre>
   <pre class="output">/var/lib/pkg/depot/gui/.PKGREPO
/var/lib/pkg/depot/cli/.PKGREPO
/var/lib/pkg/depot/base/.PKGREPO</pre>
      <pre class="command_user"><kbd>sudo cards install cards.devel</kbd></pre>
      <pre class="output">Retrieve info about the 66 packages: 100 %
/var/lib/pkg/depot/base/cards/.PKGREPO
/var/lib/pkg/depot/base/cards/cards.devel1429192050x86_64.cards.tar.xz
661020 Bytes - 671821 Bytes/Sec - 100% - 0 Sec remain  remain 
/var/lib/pkg/depot/base/acl/.PKGREPO
/var/lib/pkg/depot/base/acl/acl.devel1412540285x86_64.cards.tar.xz
...</pre>

 <a name='4'></a>
 <h2>Le fichier /etc/pkgmk.conf</h2>
  <p>
   Avant de construire son premier paquet, il est bon de vérifier quelques variables définies dans le fichier de configuration <b>/etc/pkgmk.conf</b>:
  <p>
   Mon processeur est un 8 coeurs, donc autant en profiter:
   <pre class="output">export MAKEFLAGS="-j8"</pre>
  <p>
   Les sources sont sauvegardées dans le dossier contenant la recette ou dans un autre dossier.
   Personnellement, je préfère les mettre ensemble dans un dossier séparé commun.
   Et pourquoi pas un dossier qui sera nettoyé au prochain boot, je choisis le dossier <b>/tmp</b>.
   Je souhaite que les sources soient effacées une fois le paquet compilé et installé avec succès.
   Et enfin, je préfère que le dossier de travail soit également sous le dossier <b>/tmp/work</b> au lieu du dossier défini par défaut:
   <pre class="output">PKGMK_SOURCE_DIR="/tmp"
PKGMK_KEEP_SOURCES="no"
PKGMK_WORK_DIR="/tmp/work"</pre>
  <p>
   Je n'ai pas envie de spécifier à chaque fois la demande de téléchargement des sources indisponibles.
   Une variable permet de le faire automatiquement:
   <pre class="output">PKGMK_DOWNLOAD="yes"</pre>
  <p>
   Dans ce scénario, je ne souhaite pas gérer les dépendances de façon automatique lors de la compilation et donc je n'ai pas besoin du fichier <b>.PKGREPO</b>...
   Je n'utilise que la commande <b>pkgmk</b>:
   <pre class="output">PKGMK_IGNORE_REPO="yes"
PKGMK_IGNORE_COLLECTION="yes"</pre>
  <p>
   Je ne souhaite pas que <b>pkgmk</b> scinde le binaire en paquet et sous paquets (devel, doc, man, etc).
   Je me contente du paquet de base puisque je le compile moi-même.
   Si les locales existent, je me contenterai des locales françaises et allemandes <b>fr</b> et <b>de</b>:
   <pre class="output">PKGMK_GROUPS=()
PKGMK_LOCALES=(fr de)</pre>
      <p>Pour gagner du temps, je ne souhaite pas que <b>pkgmk</b> compresse mon paquet une fois construit et pour gagner de la place, je ne souhaite pas le conserver une fois installé:</p>
      <pre class="output">PKGMK_COMPRESS_PACKAGE="no"
PKGMK_CLEAN="yes"</pre>
      <p>Voici à quoi peut ressembler votre fichier <b>/etc/pkgmk.conf</b> pour le scénario <b>B</b>:</p>
      <pre class="output">export CFLAGS="-O2 -pipe"
export CXXFLAGS="${CFLAGS}"
case ${PKGMK_ARCH} in
    "x86_64"|"")
       export MAKEFLAGS="-j8"
       ;;
    "i686")
       export CFLAGS="${CFLAGS} -m32"
       export CXXFLAGS="${CXXFLAGS} -m32"
       export LDFLAGS="${LDFLAGS} -m32"
       ;;
    *)
       echo "Unknown architecture selected! Exiting."
       exit 1
       ;;
esac
PKGMK_DOWNLOAD="yes"
PKGMK_SOURCE_DIR="/tmp"
PKGMK_KEEP_SOURCES="no"
PKGMK_WORK_DIR="/tmp/work"
PKGMK_IGNORE_REPO="yes"
PKGMK_IGNORE_COLLECTION="yes"
PKGMK_GROUPS=()
PKGMK_LOCALES=(fr de)
PKGMK_COMPRESS_PACKAGE="no"
PKGMK_CLEAN="yes"</pre>
      <p>Voilà pour ce qui est de la configuration du fichier <b>/etc/pkgmk.conf</b>

 <a name='5'></a>
 <h2>Compiler un paquet sans dépendances</h2>
        <div class="important"><img src="../graphics/caution.gif" width="10" height="10" alt="!!!" /> A partir de cet instant, toutes les commandes que vous allez effectuer DOIVENT se faire par le compte root (administrateur). Soyez très attentif lorsque vous tapez les commandes.</div>
        <p>Commençons donc par basculer en <b><span style="color: #ff0000;">compte root</span></b></p>
        <pre class="command_user"><kbd>su -</kbd></pre>
        <pre class="output">Password:</pre>
        <p>J'espère que vous vous rappelez du mot de passe <img src="../graphics/smiley-cool.gif" alt="Cool" title="Cool" />. Notez bien <b>le tiret</b>, il est indispensable pour que vous exécutiez les fichiers de configuration du compte root.</p>
        <p>Nous voilà donc en root, (la couleur du prompt est passée en rouge)</p>
        <p>Si vous lisez ceci, assurez-vous d'avoir effectué toutes les manipulations pour le scénario concerné, <a href="#22">dans notre exemple il s'agit du scénario <b>B</b></a>.</p>
        <p>Je vous propose de construire le petit éditeur de texte JOE. Vous me direz, il existe déjà, peu importe, l'idée ici est de se faire la main sur un paquet simple.</p>
        <p>Pour qu'une recette se compile et s'installe correctement, il est important de nommer le dossier par le nom de la recette, le même nom que celui défini par la variable name. Dans notre cas, le nom est: <b>joe</b></p>

  <a name='51'></a>
  <h3>Création du dossier</h3>
   <pre class="command"><kbd>mkdir -p /usr/ports/personnel/joe</kbd></pre>

  <a name='52'></a>
  <h3>Création de la recette</h3>
        <p>Si je me base sur la recette de <a href="http://www.linuxfromscratch.org/blfs/view/svn/postlfs/joe.html" title="Lire dans une autre fenêtre" class="external" onclick="window.open(this.href); return false;">BLFS</a>, tapez donc ce texte dans votre terminal et DANS votre chroot <img src="../graphics/smiley-laughing.gif" alt="Laughing" title="Laughing" /></p>
        <pre class="command"><kbd>cat &gt; /usr/ports/personnel/joe/Pkgfile &lt;&lt; "EOF"
# Description: Petit éditeur non graphique emulant emuler, wordStar
# URL: http://joe-editor.sourceforge.net/
# Maintainer: JHallen, JJJordan, Marx_sk, shallot
# Packager: François Perrin

name=joe
version=3.7
release=1
source=( <a href="http://downloads.sourceforge.net/joe-editor/joe-3.7.tar.gz">http://downloads.sourceforge.net/$name-editor/$name-$version.tar.gz)</a>
build() {
  cd $name-$version
  ./configure --prefix=/usr --sysconfdir=/etc
  make
  make DESTDIR=$PKG install
}
EOF</kbd></pre>

  <a name='53'></a>
  <h3>Compilation de la recette</h3>
   <p>
    Ca y est tout est en place pour la compilation de notre nouveau paquet...
    Oui je l'ai déjà dite celle-là <img src="../graphics/yippee.gif" alt="yippee"/>
    <pre class="command"><kbd>cd /usr/ports/personnel/joe
pkgmk -d</kbd></pre>

        <pre class="output">=======> PKGMK_INSTALL: no
=======> PKGMK_WORK_DIR: /usr/ports/personnel/joe/work
=======> PKGMK_SOURCE_DIR: /usr/ports/personnel/joe
=======> WARNING: CLEAN IGNORED
=======> WARNING: KEEP SOURCES
=======> PKGMK_UPDATE_SIGNATURE:
=======> PKGMK_IGNORE_FOOTPRINT: yes
=======> PKGMK_IGNORE_MD5SUM: yes
=======> .PKGREPO file will not be generated
=======> PKGMK_COMPRESS_PACKAGE: no
=======> name: joe
=======> version: 3.7
=======> Downloading 'http://downloads.sourceforge.net/joe-editor/joe-3.7.tar.gz'.
...
...
Saving to: '/usr/ports/personnel/joe/joe-3.7.tar.gz.partial'
2014-10-26 22:27:47 (1.01 MB/s) - '/usr/ports/personnel/joe/joe-3.7.tar.gz.partial' saved [696036/696036]

=======> Building '/usr/ports/personnel/joe/joe1414362465x86_64.cards.tar.xz'.
bsdtar -p -o -C /usr/ports/personnel/joe/work/src -xf /usr/ports/personnel/joe/joe-3.7.tar.gz
+ build
+ cd joe-3.7
+ ./configure --prefix=/usr --sysconfdir=/etc
...
...
make[3]: Leaving directory '/usr/ports/personnel/joe/work/src/joe-3.7'
make[2]: Leaving directory '/usr/ports/personnel/joe/work/src/joe-3.7'
make[1]: Leaving directory '/usr/ports/personnel/joe/work/src/joe-3.7'
=======> WARNING: Footprint ignored.</pre>

  <a name='54'></a>
  <h3>Installer mon paquet</h3>
   <p>
    Pour installer notre paquet, il suffit de taper la commande:
    <pre class="command"><kbd>pkgadd joe1414362465x86_64.cards.tar</kbd></pre>

 <a name='6'></a>
 <h2>Conclusion</h2>
    <p>
     Pour ce scénario, les seules commandes à retenir sont:
      <pre class="command"><kbd>pkgmk
pkgadd</kbd></pre>
    <p>
     La commande <b>pkgmk</b> sera <u>toujours</u> lancée dans le dossier de la recette.
