   <h1>Post-construction et (en option) génération de l'iso installable</h1>
    <h2>Introduction</h2>
     <p>Si vous avez terminé la passe 2 avec succès, vous avez tous les paquets d'un système de base.</p>
     <p>On peut maintenant finaliser notre NuTyX et l'adapter à nos besoins et enfin, produire une ISO installable.</p>
     <p>Il s'agit maintenant de décider ce qu'il vous faut, en effet actuellement votre NuTyX:</p>
      <ol>
       <li>Ne contient pas de kernel</li>
       <li>Ne peut pas être amorcée</li>
       <li>Ne permet pas de formater votre disque dur dans un autre système de fichiers que ext3 ou ext4</li>
       <li>Ne permet pas la gestion de partitions logiques</li>
       <li>Ne permet pas de se connecter à un serveur dhcp et donc d'obtenir une adresse IP de façon dynamique</li>
       <li>Ne contient aucun editeur de texte</li>
      </ol>
     <p>D'autre part votre NuTyX contient certains services dont vous n'avez peut-être pas l'utilité</p>
    <h2>Marche à suivre</h2>
     <p>Vous l'avez peut-être déjà compris, cette post-construction n'est pas plus qu'un simple copié-collé.</p>
     <p>C'est maintenant à vous de savoir ce que vous souhaitez utiliser comme moyen d'amorçage, kernel, système de fichiers, volumes logiques et adresse IP statique ou dynamique</p>
     <p>Pour mener à bien notre petite expédition, il faudra configurer un minimum le gestionnaire de paquets 'cards' et rapatrier tous les ports contenant les recettes de fabrication des paquets NuTyX disponibles.</p>
  <ol>
   <li>On commence par sortir de la NuTyX</li>
<pre class="command"><kbd>exit</kbd></pre>
   <p>On revérifie la variable LFS</p>
<pre class="command"><kbd>echo $LFS</kbd></pre>
   <p>Elle doit retourner quelque chose:</p>
<pre class="output">/mnt/lfs </pre>
   <li>On peut maintenant réentrer dans la nouvelle NuTyX pour finaliser les travaux</li>
<pre class="command"><kbd>chroot $LFS /usr/bin/env -i HOME=/root TERM="$TERM" PS1='\u: \w\$' \
/bin/bash --login</kbd></pre>
Aucune erreur ne doit apparaître:
<pre class="output">root [ / ]# </pre>
   <li>On commence par adapter le fichier cards.conf, Adaptez si nécessaire la langue.</li>
   <pre class="command"><kbd>cat &gt; /etc/cards.conf &lt;&lt; "EOF"
dir /usr/ports/gui-extra
dir /usr/ports/gui
dir /usr/ports/cli-extra
dir /usr/ports/cli
dir /usr/ports/base
locale fr
base /usr/ports/base
EOF</kbd></pre>
    <li>On peut maintenant rapatrier tous les ports disponibles sous NuTyX et compiler les ports de notre choix (pour autant qu'ils soient configurés dans le fichier 'cards.conf' ci-dessus</li>
    <pre class="command"><kbd>ports -u</kbd></pre>
    <pre class="output">...</pre>
    <p>Nous sommes maintenant prêt pour la finalisation de notre NuTyX.</p>
   </ol>
 <h2>Compilation du kernel et des ports optionnels.</h2>
  <ol>
   <li>
    <h3>Mise en place d'un kernel de votre choix</h3>
   </li>
    <p>Le seul paquet devant être impérativement installé pour avoir une NuTyX fonctionnelle est donc le kernel. Vous avez le choix entre plusieurs possibilités:</p>
     <ol>
      <li>
       <h4>Compilation d'un des kernels disponibles en ports</h4>
      </li>
         <p>Ce choix sera indispensable si vous décidez de produire une ISO installable, c'est également le choix le plus simple:</p>
         <pre class="command"><kbd>cd /usr/ports/base/kernel-lts
pkgmk -d -i</kbd></pre>
      <li>
       <h4>Compilation de son propre kernel</h4>
      </li>
        <p>Ce choix implique que la génération d'une ISO installable sera impossible</p>
        <p>Vous pouvez soit vous inspirez de l'article qui explique comment <a href="build-kernel">compiler son propre kernel</a> ou vous trouverez de nombreaux tutos sur la compilation d'un kernel sur le net</p>
     </ol>
    <li>
     <h3>Suppression des services indésirables (recommandé)</h3>
    </li>
     <p>Lors de la construction de votre NuTyX, les services ssh et rsync ont été automatiquement installés. Si vous n'envisagez pas de mettre en place un service rsync ni un accès à distance de votre machine. Il est vivement recommandé d'arrêter les services rsyncd et sshd. Même si vous ne savez pas ce que c'est, faites:</p>
     <pre class="command"><kbd>cards remove openssh.service
cards remove rsync.service</kbd></pre>
    <li>
     <h3>Mise en place de grub, l'outil d'amorçage (en option)</h3>
    </li>
     <p>Le paquet grub est uniquement nécessaire si vous dédicez de produire une ISO installable ou que vous n'avez pas encore de technique d'amorçage sur votre machine actuelle (peu probable):</p>
     <pre class="command"><kbd>cards depcreate grub</kbd></pre> 
     <p>Une fois terminée, vous allez pouvoir utiliser grub en ligne de commande ou via l'ISO générée</p>
    <li>
     <h3>Ajout des outils de formatage (en option)</h3>
    </li>
     <p>Les possibilitées de formatage sont:</p>
     <pre class="command"><kbd>cards depcreate btrfs-progs</kbd></pre>
     <pre class="command"><kbd>cards depcreate xfsprogs</kbd></pre>
     <pre class="command"><kbd>cards depcreate reiserfsprogs</kbd></pre>
     <pre class="command"><kbd>cards depcreate jfsutils</kbd></pre>
     <p>Choisissez le système de fichiers qui vous convient</p>
    <li>
     <h3>Ajout des outils de gestion de partitions logiques (en option)</h3>
    </li>
     <p>Si vous souhaitez des partitions logiques et disques en raid:</p>
     <pre class="command"><kbd>cards depcreate mdadm</kbd></pre>
    <li>
     <h3>Ajout du client dhcp pour pouvoir obtenir une adresse IP dynamiquement (en option)</h3>
    </li>
      <p>Si vous ne souhaitez pas utiliser une adresse IP fixe, vous devez donc installer un client dhcp pour obtenir une adresse IP de façon dynamique</p>
      <pre class="command"><kbd>cards depcreate dhcpcd</kbd></pre>
    <li>
     <h3>Ajout d'un éditeur de texte (en option)</h3>
    </li>
     <p>L'installateur utilise la commande 'vi', vous avez donc le choix entre:</p>
     <pre class="command"><kbd>cards depcreate e3</kbd></pre><p>et</p>
     <pre class="command"><kbd>cards depcreate vim</kbd></pre> 
    <li>
     <h3>Ajout du support NFS (en option)</h3>
    </li>
     <p>Si vous n'utilisez pas ou ne connaissez pas <a href="https://fr.wikipedia.org/wiki/Network_File_System">NFS</a>, vous pouvez ignorer cette option:</p>
     <pre class="command"><kbd>cards depcreate nfs-utils</kbd></pre>
     <p>Comme pour les services sshd et rsyncd, si vous n'avez pas l'intention de mettre en place un service nfs en place, faites:
     <pre class="command"><kbd>cards remove nfs-utils.service</kbd></pre>
  </ol>
 <h2>Option1: Produire une ISO installable.</h2>
  <ol> 
   <li>On ajoute les fichiers nécessaires au fonctionnement de l'iso</li>
   <pre class="command"><kbd>cp -av /root/development/iso /ISO</kbd></pre>
   <pre class="output">'/root/development/iso' -&gt; '/ISO'
'/root/development/iso/isolinux' -&gt; '/ISO/isolinux'
'/root/development/iso/isolinux/boot.cat' -&gt; '/ISO/isolinux/boot.cat'
'/root/development/iso/isolinux/boot.msg' -&gt; '/ISO/isolinux/boot.msg'
'/root/development/iso/isolinux/isolinux.bin' -&gt; '/ISO/isolinux/isolinux.bin'
'/root/development/iso/isolinux/isolinux.cfg' -&gt; '/ISO/isolinux/isolinux.cfg'</pre>
   <pre class="command"><kbd>cp -v /boot/kernel-* /ISO/isolinux/kernel</kbd></pre>
   <pre class="output">'/boot/kernel-3.19.0' -&gt; '/ISO/isolinux/kernel'</pre>
   <pre class="command"><kbd>cp -v /boot/initrd-* /ISO/isolinux/initrd</kbd></pre>
   <pre class="output">'/boot/initrd-3.19.0' -&gt; '/ISO/isolinux/initrd'</pre>
   <div class="note"><img alt="[Note]" src="../graphics/note.gif" />Consultez les options en bas de la page avant d'aller plus loin si vous souhaitez ajouter des paquets et donc personnaliser votre ISO ou encore réduire la taille de celle-ci en supprimant les archives des binaires ainsi que les logs de construction.</div>
   <li>On produit maintenant les fichiers squashfs qui seront utilisés par l'iso et effacer les fichiers squash existant si necessaire puisque la commande mksquashfs ne peut pas les écraser.</li>
<pre class="command"><kbd>mkdir -p /ISO/isolinux/boot/
cd /
for dir in opt bin etc lib root run sbin usr var home
do
  [ -f ISO/isolinux/boot/$dir.squashfs ] && rm ISO/isolinux/boot/$dir.squashfs
  mksquashfs $dir ISO/isolinux/boot/$dir.squashfs
done</kbd></pre>
   <li>On peut maintenant sortir de la NuTyX pour produire l'iso.</li>
   <pre class="command"><kbd>exit</kbd></pre>
   <li>On peut enfin générer notre ISO dont la version est à la date du jour.</li>
   <div class="important"><img alt="[Important]" src="../graphics/caution.gif" /><img alt="[Important]" src="../graphics/caution.gif" /><img alt="[Important]" src="../graphics/caution.gif" />Avant de lancer la prochaine commande, assurez-vous que vous avez bien la variable <b>LFS</b> configurée et que les commandes <b>mkisofs</b> et <b>isohybrid</b> sont à disposition sur votre linux principale. Elles sont respectivement dans les paquets <b>cdrkit</b> et <b>syslinux</b>.</div>
    <pre class="command"><kbd>sh $LFS/root/development/scripts/mkiso</kbd></pre>
    <pre class="output">Warning: creating filesystem that does not conform to ISO-9660.
I: -input-charset not specified, using utf-8 (detected in locale settings)
Size of boot image is 4 sectors -&gt; No emulation
  3.82% done, estimate finish Fri Jan  9 21:46:48 2015
  7.63% done, estimate finish Fri Jan  9 21:46:48 2015
 11.44% done, estimate finish Fri Jan  9 21:46:48 2015
 15.25% done, estimate finish Fri Jan  9 21:46:48 2015
 19.06% done, estimate finish Fri Jan  9 21:46:48 2015
 22.88% done, estimate finish Fri Jan  9 21:46:48 2015
 26.68% done, estimate finish Fri Jan  9 21:46:48 2015
 30.50% done, estimate finish Fri Jan  9 21:46:48 2015
 34.31% done, estimate finish Fri Jan  9 21:46:48 2015
 38.12% done, estimate finish Fri Jan  9 21:46:48 2015
 41.94% done, estimate finish Fri Jan  9 21:46:48 2015
 45.74% done, estimate finish Fri Jan  9 21:46:48 2015
 49.56% done, estimate finish Fri Jan  9 21:46:48 2015
 53.37% done, estimate finish Fri Jan  9 21:46:48 2015
 57.19% done, estimate finish Fri Jan  9 21:46:48 2015
 60.99% done, estimate finish Fri Jan  9 21:46:48 2015
 64.81% done, estimate finish Fri Jan  9 21:46:48 2015
 68.62% done, estimate finish Fri Jan  9 21:46:48 2015
 72.43% done, estimate finish Fri Jan  9 21:46:48 2015
 76.24% done, estimate finish Fri Jan  9 21:46:48 2015
 80.06% done, estimate finish Fri Jan  9 21:46:48 2015
 83.86% done, estimate finish Fri Jan  9 21:46:48 2015
 87.68% done, estimate finish Fri Jan  9 21:46:48 2015
 91.49% done, estimate finish Fri Jan  9 21:46:48 2015
 95.31% done, estimate finish Fri Jan  9 21:46:48 2015
 99.11% done, estimate finish Fri Jan  9 21:46:48 2015
Total translation table size: 2048
Total rockridge attributes bytes: 1751
Total directory bytes: 4096
Path table size(bytes): 38
Max brk space used 28000
165140 extents written (322 MB)</pre>
   <p>Vous avez désormais une ISO qui se trouve dans le dossier $LFS</p>
   <pre class="command"><kbd>ls $LFS/</kbd></pre>
   <pre class="output">base   bin   etc   lib    NuTyX_x86_64-20161001.iso   root  sources  usr
boot  home  lib64  NuTyX_x86_64-20161001.md5sum  run   srv      tmp     var
dev   ISO   mnt    proc                                   sbin  sys      tools</pre>
   <li>Il ne vous reste plus qu'à la transférer sur une clé usb et la tester</li>
   <pre class="command"><kbd>dd if=$LFS/NuTyX_x86_64-20161001.iso of=/dev/sdb</kbd></pre>
   <pre class="output">526336+0 enregistrements lus
526336+0 enregistrements écrits
269484032 octets (269 MB) copiés, 67.3208 s, 4.0 MB/s</pre>
   </ol>
    <p>Félicitations, vous avez maintenant entre les mains une ISO NuTyX de base prête à être installée sur toutes vos machines.</p>
 <h2>Option2: Réduire la taille finale de l'ISO.</h2>
    <ol>
    <li>Si vous souhaitez réduire la taille finale de l'ISO, vous pouvez supprimer les binaires du git et les logs produits, ils ne serviront plus. Si vous souhaitez conserver les binaires, lancez la commande ci-dessus.</li>
<pre class="command"><kbd>rsync -a /root/development/base/ /base/</kbd></pre>
     <p>Aucune erreur ne doit apparaître</p>
     <p>On peut maintenant effacer les binaires du git</p>
     <pre class="command"><kbd>find /root/ -name "*.cards.*" -exec rm -v {} \;</kbd></pre>
     <p>Aucune erreur ne doit apparaître</p>
     <p>On efface les logs.</p>
     <pre class="command"><kbd>mv /root/logs /logs</kbd></pre>
     <p>Si besoin est, les binaires et les logs se trouvent donc à la racine de la NuTyX</p>
    <li>Le kernel compilé est très gros en taille. Si vous souhaitez réduire la taille de votre iso, vous pouvez supprimez la doc et les sources du kernel:</li>
     <pre class="command"><kbd>pkgrm kernel.doc
pkgrm kernel.devel</kbd></pre>
   </ol>
